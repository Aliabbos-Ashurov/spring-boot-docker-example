services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${APP_NAME}
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${POSTGRES_CONTAINER_NAME}:${DB_PORT}/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    networks:
      - app-network
    restart: always

  postgres:
    image: postgres:latest
    container_name: ${POSTGRES_CONTAINER_NAME}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    command:
      - "echo 'starting'"
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgres/data
    networks:
      - app-network
    restart: always

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge

